"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var NotificationComponent = (function () {
    function NotificationComponent() {
        var _this = this;
        this.title = '';
        this.showCancel = false;
        this.showOk = false;
        this.cancelText = 'Cancel';
        this.okText = 'Ok';
        this.type = 'success';
        this.style = 'rounded';
        this.okCallback = new core_1.EventEmitter();
        this.closeCallback = new core_1.EventEmitter();
        this.cancelCallback = new core_1.EventEmitter();
        this.isOkNotification = function () {
            return _this.type.toLowerCase() === 'success';
        };
        this.isInfoNotification = function () {
            return _this.type.toLowerCase() === 'info';
        };
        this.isWarningNotification = function () {
            return _this.type.toLowerCase() === 'warning';
        };
        this.isErrorNotification = function () {
            return _this.type.toLowerCase() === 'error';
        };
        this.isRoundedNotification = function () {
            return _this.style.toLowerCase() === 'rounded';
        };
        this.showHeader = function () {
            return _this.title !== '';
        };
        this.showFooter = function () {
            return _this.showOk || _this.showCancel;
        };
        this.showContainerCloseBtn = function () {
            return !_this.showHeader() && !(_this.showOk || _this.showCancel);
        };
        this.showHeaderCloseBtn = function () {
            return !(_this.showOk || _this.showCancel);
        };
        this.applyWrapper = function () {
            return !_this.showHeader() && !(_this.showOk || _this.showCancel);
        };
    }
    NotificationComponent.prototype.ngOnChanges = function (changes) {
        var show = changes['show'];
        if (show.currentValue !== show.previousValue) {
            this.animationState = show.currentValue ? 'visible' : 'hidden';
        }
    };
    NotificationComponent.prototype.onOkClick = function () {
        this.okCallback.emit();
    };
    NotificationComponent.prototype.onCloseClick = function () {
        this.closeCallback.emit();
    };
    NotificationComponent.prototype.onCancelClick = function () {
        this.cancelCallback.emit();
    };
    return NotificationComponent;
}());
NotificationComponent.decorators = [
    { type: core_1.Component, args: [{
                selector: 'app-notification',
                template: "\n    <div class='app-notification'\n        [class.ok]='isOkNotification()'\n        [class.info]='isInfoNotification()'\n        [class.warning]='isWarningNotification()'\n        [class.error]='isErrorNotification()'\n        [class.ntf-border]='showHeader()'\n        [class.ntf-radius]='isRoundedNotification()'\n        [@animation]=\"animationState\">\n      <div class='ntf-header'\n        *ngIf='showHeader()'>\n        <div [class.ntf-wrapper]='applyWrapper()'>\n          {{ title }}\n        </div>\n          <span class='close'\n            *ngIf='showHeaderCloseBtn()'\n            (click)='onCloseClick()'></span>\n      </div>\n      <div class='ntf-container'>\n        <div class='ntf-text'>\n          <div [class.ntf-wrapper]='applyWrapper()'\n            [innerHTML]='text'>\n          </div>\n          <span class='close'\n            *ngIf='showContainerCloseBtn()'\n            (click)='onCloseClick()'></span>\n        </div>    \n        <div class='ntf-footer'\n          *ngIf='showFooter()'>\n          <span class='ok'\n            [class.ntf-radius]='isRoundedNotification()'\n            *ngIf='showOk'\n            (click)='onOkClick()'>{{ okText }}</span>\n          <span class='cancel'\n            [class.ntf-radius]='isRoundedNotification()'\n            *ngIf='showCancel'\n            (click)='onCancelClick()'>{{ cancelText }}</span>\n        </div>\n      </div>\n    </div>\n  ",
                styles: ["\n    .app-notification {\n        text-align: left; }\n        .app-notification.ntf-radius {\n          border-radius: 5px; }\n        .app-notification.show {\n          display: block; }\n        .app-notification.ntf-border {\n          border: 1px #bec5b7 solid; }\n        .app-notification.ok {\n          background: #6abf69;\n          color: #003300; }\n          .app-notification.ok   .ntf-footer   span.ok {\n            background: #003300; }\n        .app-notification.info {\n          background: #64b5f6;\n          color: #003c8f; }\n          .app-notification.info   .ntf-footer   span.ok {\n            background: #003c8f; }\n        .app-notification.warning {\n          background: #fff263;\n          color: #c49000; }\n          .app-notification.warning   .ntf-footer   span.ok {\n            background: #c49000; }\n        .app-notification.error {\n          background: #f05545;\n          color: #870000; }\n          .app-notification.error   .ntf-footer   span.ok {\n            background: #870000; }\n        .app-notification   .ntf-header {\n          padding: 5px 15px;\n          color: #FFF;\n          background: #bec5b7;\n          position: relative; }\n        .app-notification   .ntf-container {\n          padding: 15px;\n          position: relative; }\n        .app-notification   .ntf-footer {\n          margin-top: 15px;\n          text-align: center; }\n          .app-notification   .ntf-footer   span {\n            color: #FFF;\n            padding: 5px 15px;\n            cursor: pointer;\n            margin: 0 10px; }\n            .app-notification   .ntf-footer   span.ntf-radius {\n              border-radius: 5px; }\n            .app-notification   .ntf-footer   span.cancel {\n              background: #bec5b7; }\n            .app-notification   .ntf-footer   span:hover {\n              opacity: 0.8; }\n        .app-notification   .ntf-wrapper {\n          width: 95%;\n          display: inline-block; }\n        .app-notification   .close {\n          position: absolute;\n          right: 15px;\n          width: 18px;\n          height: 18px;\n          opacity: 0.3;\n          cursor: pointer;\n          top: 50%;\n          -webkit-transform: translateY(-50%);\n                  transform: translateY(-50%); }\n          .app-notification   .close:hover {\n            opacity: 1; }\n          .app-notification   .close:before, .app-notification   .close:after {\n            position: absolute;\n            left: 15px;\n            content: ' ';\n            height: 18px;\n            width: 2px;\n            background-color: #000a12; }\n          .app-notification   .close:before {\n            -webkit-transform: rotate(45deg);\n                    transform: rotate(45deg); }\n          .app-notification   .close:after {\n            -webkit-transform: rotate(-45deg);\n                    transform: rotate(-45deg); }\n  "],
                animations: [
                    core_1.trigger('animation', [
                        core_1.state('hidden', core_1.style({
                            display: 'none'
                        })),
                        core_1.state('visible', core_1.style({
                            display: 'block'
                        })),
                        core_1.transition('hidden => visible', core_1.animate('100ms ease-in')),
                        core_1.transition('visible => hidden', core_1.animate('100ms ease-out'))
                    ])
                ]
            },] },
];
/** @nocollapse */
NotificationComponent.ctorParameters = function () { return []; };
NotificationComponent.propDecorators = {
    'title': [{ type: core_1.Input },],
    'text': [{ type: core_1.Input },],
    'showCancel': [{ type: core_1.Input },],
    'showOk': [{ type: core_1.Input },],
    'cancelText': [{ type: core_1.Input },],
    'okText': [{ type: core_1.Input },],
    'type': [{ type: core_1.Input },],
    'show': [{ type: core_1.Input },],
    'style': [{ type: core_1.Input },],
    'okCallback': [{ type: core_1.Output },],
    'closeCallback': [{ type: core_1.Output },],
    'cancelCallback': [{ type: core_1.Output },],
};
exports.NotificationComponent = NotificationComponent;
//# sourceMappingURL=notification.component.js.map